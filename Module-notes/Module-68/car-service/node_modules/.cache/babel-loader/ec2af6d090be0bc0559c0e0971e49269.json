{"ast":null,"code":"import axios from \"axios\";\nconst axiosPrivate = axios.create({});\naxiosPrivate.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  if (!config.headers.authorization) {\n    config.headers.authorization = `Bearer ${localStorage.getItem('accessToken')}`;\n  }\n\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n}); // Add a response interceptor\n\naxiosPrivate.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  // Do something with response data\n  return response;\n}, function (error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  // Do something with response error\n  if (error.response.status === 403) {// refresh token \n    // send to the server\n  }\n\n  return Promise.reject(error);\n});\nexport default axiosPrivate;","map":{"version":3,"sources":["/var/www/html/farihatulmaria/farihatulmaria/programming-hero/Module-notes/Module-68/car-service/src/api/axiosPrivate.jsx"],"names":["axios","axiosPrivate","create","interceptors","request","use","config","headers","authorization","localStorage","getItem","error","Promise","reject","response","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAa,EAAb,CAArB;AAEAD,YAAY,CAACE,YAAb,CAA0BC,OAA1B,CAAkCC,GAAlC,CAAsC,UAAUC,MAAV,EAAkB;AACpD;AACA,MAAG,CAACA,MAAM,CAACC,OAAP,CAAeC,aAAnB,EAAiC;AAC7BF,IAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAAgC,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC,EAA7E;AACH;;AACD,SAAOJ,MAAP;AACD,CANH,EAMK,UAAUK,KAAV,EAAiB;AAClB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CATH,E,CAWA;;AACAV,YAAY,CAACE,YAAb,CAA0BW,QAA1B,CAAmCT,GAAnC,CAAuC,UAAUS,QAAV,EAAoB;AACvD;AACA;AACA,SAAOA,QAAP;AACD,CAJH,EAIK,UAAUH,KAAV,EAAiB;AAClB;AACA;AACA,MAAGA,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAA7B,EAAiC,CAC7B;AACA;AACH;;AACD,SAAOH,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAZH;AAcE,eAAeV,YAAf","sourcesContent":["import axios from \"axios\";\n\nconst axiosPrivate = axios.create({});\n\naxiosPrivate.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    if(!config.headers.authorization){\n        config.headers.authorization = `Bearer ${localStorage.getItem('accessToken')}`\n    }\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n\n// Add a response interceptor\naxiosPrivate.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  }, function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    if(error.response.status === 403){\n        // refresh token \n        // send to the server\n    }\n    return Promise.reject(error);\n  });\n\n  export default axiosPrivate;"]},"metadata":{},"sourceType":"module"}